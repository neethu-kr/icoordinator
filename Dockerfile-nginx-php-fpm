FROM php:7.4-fpm

RUN apt-get update \
  && apt-get install --yes --no-install-recommends libpq-dev curl gnupg build-essential git\
  && docker-php-ext-install pdo_pgsql pdo_mysql

#INSTALL NGINX
RUN apt-get install -y nginx

#INSTALL APCU
RUN pecl install apcu && docker-php-ext-enable apcu
RUN echo "apc.enable_cli=1" >> /usr/local/etc/php/conf.d/apcu.ini
RUN echo "apc.enable=1" >> /usr/local/etc/php/conf.d/apcu.ini
#APCU

# Enable LDAP
RUN apt-get install -y libldap2-dev
RUN docker-php-ext-configure ldap \
    && docker-php-ext-install ldap \
    && php -m
# LDAP

# Enable ZIP
RUN apt-get install -y zip unzip zlib1g-dev libzip-dev
RUN docker-php-ext-configure zip \
    && docker-php-ext-install zip \
    && php -m
# ZIP

RUN echo "pm = ondemand" >> /usr/local/etc/php-fpm.d/www.conf \
    && echo "pm.max_children = 128" >> /usr/local/etc/php-fpm.d/www.conf \
    && echo "pm.process_idle_timeout = 3s" >> /usr/local/etc/php-fpm.d/www.conf


RUN cp /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini
COPY ./fpm_custom.conf /usr/local/etc/php-fpm.d/fpm_custom.conf
COPY ./nginx.conf /etc/nginx/nginx.conf
COPY ./nginx_server.conf /etc/nginx/conf.d/default.conf
COPY ./entrypoint.sh /etc/entrypoint.sh
COPY ./bin /app/bin
COPY ./application /app/application
COPY ./composer-teamcity.json /app/composer.json
COPY ./composer-teamcity.lock /app/composer.lock
COPY ./public /app/public


RUN mkdir -p /app/var/cache
RUN chmod +x /etc/entrypoint.sh
RUN chmod +x /app/bin/*

WORKDIR /app
COPY --from=composer /usr/bin/composer /usr/bin/composer
RUN composer install

EXPOSE 80 443

ENTRYPOINT ["/etc/entrypoint.sh"]